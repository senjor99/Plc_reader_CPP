TYPE "TG_HEADER"
VERSION : 0.1
   STRUCT
      ComunicaionFlag : Int;   // Comunication Commnad 1= New TG
      TelegramNo : Int;   // Telegram Number
      WPC_No : Int;   // WPC Number
      OP : Int;   // OP Number
      INFO : Struct   // Order Info structure
         ProductionNumber : Array[1..20] of Char;   // Order no. (VIN)
         BID1 : Array[1..12] of Char;   // Internal ID (BentelerID) main line or ID Left hand (also for safety parts)
         BID2 : Array[1..12] of Char;   // Internal ID (BentelerID) main line or ID Right hand
         "Rotation-No." : Array[1..6] of Char;   // Rotation Number (Right aligned e.g. 000012" number from 1 .. 9999)
         BID1_SS : Array[1..12] of Char;   // Benteler ID1 (LH) for replacing module
         BID2_SS : Array[1..12] of Char;   // Benteler ID2 (RH) for replacing module
      END_STRUCT;
      ErrorCode : Struct   // Error Code
         NoOrder : Bool;   // No Order
         WPCNotEmpty : Bool;   // WPC Not Empty
         ToleraceCheckNok : Bool;   // Tolerace Check Joint or Press Nok
         ToleraceCheckNok_LH : Bool;   // Tolerace Check Joint or Press LH NOK / RH OK
         ToleraceCheckNok_RH : Bool;   // Tolerace Check Joint or Press  LH OK / RH NOK
         ToleraceCheckNok_LH_RH : Bool;   // Tolerace Check Joint or Press  LH NOK / RH NOK
         VIN_BID_WPC_Variant_Nok : Bool;   // VIN / BID / WPC / Variant NOK
         SerialDataMissing : Bool;   // Serial Data Missing
         AlignerDataMissing : Bool;   // Aligner Data Missing
         BushingDataMissing : Bool;   // Bushing Data Missing
         ErrorBuildingBatchOrder : Bool;   // Error Building Batch Order
         NoStockAvailable : Bool;   // Replenishment - No Stock Available
         PVListNotMatch : Bool;   // Process Value List Not Matching (Joints,Pressforces, ...)
         MaxOrder : Bool;   // No Order - max. Orders are on the Line
         ZSBnotAvailable : Bool;   // No Orde - sub ZSB not available
         Sub_ZSB_NOK : Bool;   // Sub ZSB NOK
      END_STRUCT;
      Reseve : Int;   // Reseve
      "Number of generic containers" : Int;   // Number of generic container
   END_STRUCT;

END_TYPE

TYPE "ORDER"
VERSION : 0.1
   STRUCT
      ProductionNumber : Array[1..20] of Char;   // Order no. (VIN)
      ProductionSequnce : Array[1..20] of Char;   // Sequence no. (OEM)
      OEM_line : Byte;   // OEM line
      OEM_plant : Byte;   // OEM plant
      "Date" : Array[1..6] of Char;   // Current Date as YYMMDD
      "Time" : Array[1..6] of Char;   // Current Time as HHMMSS
      BoxNumber : DInt;   // Custumer Box no. (JIT Rack)
      BoxPosition : Int;   // Rack Position
      BID1 : Array[1..12] of Char;   // Internal ID (BentelerID) main line or ID Left hand (also for safety parts)
      BID2 : Array[1..12] of Char;   // Internal ID (BentelerID) main line or ID Right hand
      "Rotation-No." : Array[1..6] of Char;   // Rotation Number (Right aligned e.g. 000012" number from 1 .. 9999)
      OrderType : Struct   // Different Type of orders; information for the worker.
         NormalProduction : Bool;   // Normal Production
         "1stSafetyPartStock" : Bool;   // 1st safety part stock
         "2ndSafetyPartStock" : Bool;   // 2nd safety part stock
         ReorderBeforeMarriage : Bool;   // Internal Reorder part rescheduled before marriage station
         ReorderAfterMarriage : Bool;   // Internal Reorder part rescheduled after marriage station
         TestModules : Bool;   // Test Modules
         CustomerReorder : Bool;   // Customer Reorder
         DefferedOrder : Bool;   // Deffered Order
         ScrapOrder : Bool;   // Scrap Order
         NotUsed_10 : Bool;   // Not used
         NotUsed_11 : Bool;   // Not used
         NotUsed_12 : Bool;   // Not used
         NotUsed_13 : Bool;   // Not used
         NotUsed_14 : Bool;   // Not used
         NotUsed_15 : Bool;   // Not used
         NotUsed_16 : Bool;   // Not used
      END_STRUCT;
      CarType : Int;   // Car Type
      "Lot-No" : Array[1..20] of Char;   // Lot-Number (Spec. for Powertrain)
      RES : Array[1..17] of Word;   // Reserve
   END_STRUCT;

END_TYPE

TYPE "SFS_CV"
VERSION : 0.1
   STRUCT
      Component_ID : Int;   // PLC class of the component
      Component_VR : Int;   // Lamp for pick by light
      OP : Int;   // Operation point, were the component is to be used
      SFS : Struct   // PLC control bits
         PN_LH : Bool;   // Part To Scan LH
         PN_RH : Bool;   // Part To Scan RH
         SN_LH : Bool;   // Serial Number Scan LH
         SN_RH : Bool;   // Serial Number Scan RH
         Res4 : Bool;   // Not Used
         Res5 : Bool;   // Not Used
         Res6 : Bool;   // Not Used
         Res7 : Bool;   // Not Used
      END_STRUCT;
      PartNumber1 : Array[1..24] of Char;   // PartNumber1
      PartNumber2 : Array[1..24] of Char;   // PartNumber2 (Replacement PN for running change)
   END_STRUCT;

END_TYPE

TYPE "SFS_PV"
VERSION : 0.1
   STRUCT
      ID : Int;   // Process Value ID
      NR : Int;   // Process Value Number
      ZSB1 : Char;   // Assy the process belongs 1 to (CL,CR,FS..) |Zusammenbau|
      ZSB2 : Char;   // Assy the process belongs 2 to (CL,CR,FS..) |Zusammenbau|
   END_STRUCT;

END_TYPE

DATA_BLOCK "Order_SFSToStatADB"
{ S7_Optimized_Access := 'FALSE' }
VERSION : 0.1
NON_RETAIN
   STRUCT 
      HD : "TG_HEADER";   // Header
      OD : "ORDER";   // Order
      CV : Array[1..100] of "SFS_CV";   // Compnent variant
      SFS_PV : Array[1..300] of "SFS_PV";   // Process value for SFS
   END_STRUCT;


BEGIN

END_DATA_BLOCK

